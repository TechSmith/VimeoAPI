<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|Win32">
      <Configuration>Debug</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|Win32">
      <Configuration>Release</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{85F6CD6E-1FBF-46C1-B6F0-8680FBDC3C6E}</ProjectGuid>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <Keyword>ManagedCProj</Keyword>
    <RootNamespace>VimeoInterop</RootNamespace>
    <SccProjectName>SAK</SccProjectName>
    <SccAuxPath>SAK</SccAuxPath>
    <SccLocalPath>SAK</SccLocalPath>
    <SccProvider>SAK</SccProvider>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <CLRSupport>true</CLRSupport>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <CLRSupport>true</CLRSupport>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <CLRSupport>true</CLRSupport>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <CLRSupport>true</CLRSupport>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <LinkIncremental>true</LinkIncremental>
    <OutDir>$(SolutionDir)Bin\$(Platform)\$(Configuration)\</OutDir>
    <IntDir>$(Platform)\$(Configuration)\</IntDir>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <LinkIncremental>true</LinkIncremental>
    <OutDir>$(SolutionDir)Bin\$(Platform)\$(Configuration)\</OutDir>
    <IntDir>$(Platform)\$(Configuration)\</IntDir>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <LinkIncremental>false</LinkIncremental>
    <OutDir>$(SolutionDir)Bin\$(Platform)\$(Configuration)\</OutDir>
    <IntDir>$(Platform)\$(Configuration)\</IntDir>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <LinkIncremental>false</LinkIncremental>
    <OutDir>$(SolutionDir)Bin\$(Platform)\$(Configuration)\</OutDir>
    <IntDir>$(Platform)\$(Configuration)\</IntDir>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>Disabled</Optimization>
      <PreprocessorDefinitions>WIN32;_DEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <PrecompiledHeader>Use</PrecompiledHeader>
      <ProgramDataBaseFileName>$(TargetDir)$(TargetName).pdb</ProgramDataBaseFileName>
    </ClCompile>
    <Link>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <AdditionalDependencies>
      </AdditionalDependencies>
    </Link>
    <PostBuildEvent>
      <Command>         xcopy /D /Y /F "$(SolutionDir)Bin\AnyCPU\$(Configuration)\Newtonsoft.Json.dll" "$(SolutionDir)Bin\$(Platform)\$(Configuration)\Vimeo\"
         if errorLevel 1 goto BuildEventFailed
         xcopy /D /Y /F "$(SolutionDir)Bin\AnyCPU\$(Configuration)\VimeoAPI.dll" "$(SolutionDir)Bin\$(Platform)\$(Configuration)\Vimeo\"
         if errorLevel 1 goto BuildEventFailed
         xcopy /D /Y /F "$(SolutionDir)Bin\AnyCPU\$(Configuration)\VimeoAPI.pdb" "$(SolutionDir)Bin\$(Platform)\$(Configuration)\Vimeo\"
         if errorLevel 1 goto BuildEventFailed
         xcopy /D /Y /F "$(OutDir)VimeoInterop.lib" "$(SolutionDir)Bin\$(Platform)\$(Configuration)\"
         if errorLevel 1 goto BuildEventFailed
         xcopy /D /Y /F "$(OutDir)VimeoInterop.pdb" "$(SolutionDir)Bin\$(Platform)\$(Configuration)\"
         if errorLevel 1 goto BuildEventFailed
         

         goto BuildEventOK

         :BuildEventFailed
         echo Post-Build Event for $(ProjectName) FAILED
         exit 1

         :BuildEventOK
         echo Post-Build Event for $(ProjectName) SUCCEEDED</Command>
    </PostBuildEvent>
    <PreBuildEvent>
      <Command>md "$(TargetDir)"
pushd "$(TargetDir)"
attrib -R /S</Command>
    </PreBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>Disabled</Optimization>
      <PreprocessorDefinitions>WIN32;_DEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <PrecompiledHeader>Use</PrecompiledHeader>
      <ProgramDataBaseFileName>$(TargetDir)$(TargetName).pdb</ProgramDataBaseFileName>
    </ClCompile>
    <Link>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <AdditionalDependencies>
      </AdditionalDependencies>
    </Link>
    <PostBuildEvent>
      <Command>         xcopy /D /Y /F "$(SolutionDir)Bin\AnyCPU\$(Configuration)\Newtonsoft.Json.dll" "$(SolutionDir)Bin\$(Platform)\$(Configuration)\Vimeo\"
         if errorLevel 1 goto BuildEventFailed
         xcopy /D /Y /F "$(SolutionDir)Bin\AnyCPU\$(Configuration)\VimeoAPI.dll" "$(SolutionDir)Bin\$(Platform)\$(Configuration)\Vimeo\"
         if errorLevel 1 goto BuildEventFailed
         xcopy /D /Y /F "$(SolutionDir)Bin\AnyCPU\$(Configuration)\VimeoAPI.pdb" "$(SolutionDir)Bin\$(Platform)\$(Configuration)\Vimeo\"
         if errorLevel 1 goto BuildEventFailed
         xcopy /D /Y /F "$(OutDir)VimeoInterop.lib" "$(SolutionDir)Bin\$(Platform)\$(Configuration)\"
         if errorLevel 1 goto BuildEventFailed
         xcopy /D /Y /F "$(OutDir)VimeoInterop.pdb" "$(SolutionDir)Bin\$(Platform)\$(Configuration)\"
         if errorLevel 1 goto BuildEventFailed
         

         goto BuildEventOK

         :BuildEventFailed
         echo Post-Build Event for $(ProjectName) FAILED
         exit 1

         :BuildEventOK
         echo Post-Build Event for $(ProjectName) SUCCEEDED</Command>
    </PostBuildEvent>
    <Lib>
      <TargetMachine>MachineX64</TargetMachine>
    </Lib>
    <PreBuildEvent>
      <Command>md "$(TargetDir)"
pushd "$(TargetDir)"
attrib -R /S</Command>
    </PreBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <PreprocessorDefinitions>WIN32;NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <PrecompiledHeader>Use</PrecompiledHeader>
      <ProgramDataBaseFileName>$(TargetDir)$(TargetName).pdb</ProgramDataBaseFileName>
    </ClCompile>
    <Link>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <AdditionalDependencies>
      </AdditionalDependencies>
    </Link>
    <PostBuildEvent>
      <Command>         xcopy /D /Y /F "$(SolutionDir)Bin\AnyCPU\$(Configuration)\Newtonsoft.Json.dll" "$(SolutionDir)Bin\$(Platform)\$(Configuration)\Vimeo\"
         if errorLevel 1 goto BuildEventFailed
         xcopy /D /Y /F "$(SolutionDir)Bin\AnyCPU\$(Configuration)\VimeoAPI.dll" "$(SolutionDir)Bin\$(Platform)\$(Configuration)\Vimeo\"
         if errorLevel 1 goto BuildEventFailed
         xcopy /D /Y /F "$(SolutionDir)Bin\AnyCPU\$(Configuration)\VimeoAPI.pdb" "$(SolutionDir)Bin\$(Platform)\$(Configuration)\Vimeo\"
         if errorLevel 1 goto BuildEventFailed
         xcopy /D /Y /F "$(OutDir)VimeoInterop.lib" "$(SolutionDir)Bin\$(Platform)\$(Configuration)\"
         if errorLevel 1 goto BuildEventFailed
         xcopy /D /Y /F "$(OutDir)VimeoInterop.pdb" "$(SolutionDir)Bin\$(Platform)\$(Configuration)\"
         if errorLevel 1 goto BuildEventFailed
         

         goto BuildEventOK

         :BuildEventFailed
         echo Post-Build Event for $(ProjectName) FAILED
         exit 1

         :BuildEventOK
         echo Post-Build Event for $(ProjectName) SUCCEEDED</Command>
    </PostBuildEvent>
    <PreBuildEvent>
      <Command>md "$(TargetDir)"
pushd "$(TargetDir)"
attrib -R /S</Command>
    </PreBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <PreprocessorDefinitions>WIN32;NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <PrecompiledHeader>Use</PrecompiledHeader>
      <ProgramDataBaseFileName>$(TargetDir)$(TargetName).pdb</ProgramDataBaseFileName>
    </ClCompile>
    <Link>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <AdditionalDependencies>
      </AdditionalDependencies>
    </Link>
    <PostBuildEvent>
      <Command>         xcopy /D /Y /F "$(SolutionDir)Bin\AnyCPU\$(Configuration)\Newtonsoft.Json.dll" "$(SolutionDir)Bin\$(Platform)\$(Configuration)\Vimeo\"
         if errorLevel 1 goto BuildEventFailed
         xcopy /D /Y /F "$(SolutionDir)Bin\AnyCPU\$(Configuration)\VimeoAPI.dll" "$(SolutionDir)Bin\$(Platform)\$(Configuration)\Vimeo\"
         if errorLevel 1 goto BuildEventFailed
         xcopy /D /Y /F "$(SolutionDir)Bin\AnyCPU\$(Configuration)\VimeoAPI.pdb" "$(SolutionDir)Bin\$(Platform)\$(Configuration)\Vimeo\"
         if errorLevel 1 goto BuildEventFailed
         xcopy /D /Y /F "$(OutDir)VimeoInterop.lib" "$(SolutionDir)Bin\$(Platform)\$(Configuration)\"
         if errorLevel 1 goto BuildEventFailed
         xcopy /D /Y /F "$(OutDir)VimeoInterop.pdb" "$(SolutionDir)Bin\$(Platform)\$(Configuration)\"
         if errorLevel 1 goto BuildEventFailed
         

         goto BuildEventOK

         :BuildEventFailed
         echo Post-Build Event for $(ProjectName) FAILED
         exit 1

         :BuildEventOK
         echo Post-Build Event for $(ProjectName) SUCCEEDED</Command>
    </PostBuildEvent>
    <Lib>
      <TargetMachine>MachineX64</TargetMachine>
    </Lib>
    <PreBuildEvent>
      <Command>md "$(TargetDir)"
pushd "$(TargetDir)"
attrib -R /S</Command>
    </PreBuildEvent>
  </ItemDefinitionGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Xml" />
  </ItemGroup>
  <ItemGroup>
    <ClInclude Include="resource.h" />
    <ClInclude Include="Stdafx.h" />
    <ClInclude Include="VimeoInterop.h" />
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include="AssemblyInfo.cpp" />
    <ClCompile Include="Stdafx.cpp">
      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Create</PrecompiledHeader>
      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Create</PrecompiledHeader>
      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Create</PrecompiledHeader>
      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Create</PrecompiledHeader>
    </ClCompile>
    <ClCompile Include="VimeoInterop.cpp" />
  </ItemGroup>
  <ItemGroup>
    <None Include="app.ico" />
    <None Include="ReadMe.txt" />
  </ItemGroup>
  <ItemGroup>
    <ResourceCompile Include="app.rc" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\VimeoAPI\VimeoAPI.csproj">
      <Project>{f13df16e-b846-4532-ab59-b26418d1f95a}</Project>
    </ProjectReference>
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>